HA02 
Question 5 :

Implement SR protocol. Write a sender and receiver program using UDP socket programming with a window size of N, and using S sequence numbers i.e. 0, 1, ..., S-1. Sender should send N (Configurable e.g. 12) packets and uses a timeout value of T (e.g. 2) seconds. Receiver program would run using socket number 20000+x, where x corresponds to last 2 three digits of your USN number. The message would have msg header value as its sequence number and content as "message number N" + md5sum checksum value, where N corresponds to sequence number. You can use md5sum checksum library to compute checksum. Consider the case. Sender should exit when it receives ack for the last packet i.e. Nth packet. Implement a lossy channel as receiver side losing every Ith ack (e.g. I=4). Receiver program would run for ever. Whenever sender and receiver receives a message , these are displayed on terminal.
Thus invocation of sender and receiver program would be as follows

./sender <W> <S> <N> <T> <receiver IP> <receiver port>
  W - window size
  S - Max sequence number
  N - number of messages to send
  T - timeout value (in seconds) waiting for ack

./receiver <S> <I> <K> <receiver port>
  K - receiver buffer size.
  I - every Ith ack from receiver side is lost
  
